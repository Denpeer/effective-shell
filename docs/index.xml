<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs on Effective Shell</title><link>https://effective-shell.com/docs/</link><description>Recent content in Docs on Effective Shell</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://effective-shell.com/docs/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://effective-shell.com/docs/part-x-appendices/essential-manpages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://effective-shell.com/docs/part-x-appendices/essential-manpages/</guid><description>The Most Important Manpages As an appendix, or printed reference, list of the top ten manpages?
man re_pattern - basic and extended regex patterns man test is an excellent way to quickly check common tests (existence of a file etc) man set is super useful when checking options like set -ex in scripts man re_format man getopt man XXX show signal commands (Ctrl+V etc) man bash search for ARITHMETIC\ EVALUATION to find how arithmetic operators work in bash</description></item><item><title/><link>https://effective-shell.com/docs/part-x-appendices/index-of-commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://effective-shell.com/docs/part-x-appendices/index-of-commands/</guid><description>Command Description cd ls pwd mkdir rm rmdir cd cd ls
grep
mkdir
rm
rmdir
touch
cat
watch
tail
head</description></item><item><title/><link>https://effective-shell.com/docs/part-x-appendices/shell-parameter-expansion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://effective-shell.com/docs/part-x-appendices/shell-parameter-expansion/</guid><description>Variable Description $0 The first parameter to the shell, which is typically the path of the shell itself. $1 The first parameter $2 The second parameter ${11} The 11th parameter - if the parameter is more than one digit you must surround it with braces $# The number of parameters $@ The full set of parameters as an array $* The full set of parameters as a string separated by the first value in the $IFS variable ${@:start:count} A subset of &amp;lsquo;count&amp;rsquo; parameters starting at parameter number &amp;lsquo;start&amp;rsquo; $?</description></item></channel></rss>